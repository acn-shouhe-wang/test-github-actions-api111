# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Environment Name'
        required: true
        type: choice
        options:
          - dev1
          - dev2
          - stag
          - uat
          - prd
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#    - name: Build with Gradle
#      run: |
#         ./gradlew deleteJars
#         ./gradlew copyJars
#         ./gradlew jar -Dprofile=${{ inputs.env_name }}
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: release-candidate
    - run: |
        packageVersion="$(gh api -H "Accept: application/vnd.github+json" /users/acn-shouhe-wang/packages/maven/test.a.b.test-github-actions-api/versions | jq .[].html_url | grep -oe "version=.*" | grep -oe "[0-9]\.[0-9]\.[0-9]" | head -n 1)"
        echo $packageVersion
        packageVersionPre=$(echo $packageVersion | grep -oe "[0-9]\.[0-9]\.")
        echo $packageVersionPre
        packageVersionEnd=$(echo $packageVersion | grep -oe "\..*$")
        echo $packageVersionEnd
        sum=$(($packageVersionEnd + 1))
        echo $sum
        
        chmod +x gradlew
        ./gradlew bootJar -DpackageVersion=$($packageVersionPre$sum)
      env:
        GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
