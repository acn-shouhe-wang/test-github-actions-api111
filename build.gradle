plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('deleteJars', Delete) {
    delete 'build/libs/'
}

tasks.register('copyJars', Copy) {
    mkdir('build/libs/lib')
    from configurations.runtimeClasspath
    into('build/libs/lib')
}

def env=System.getProperty("profile") ?:"dev2"

jar {
    archiveFileName = "test-github-actions-api-0.0.1.jar"
    doFirst {
        def file = new File("${buildDir}/resources/main/application.properties")
        println("********************${env}********************")
        file.newWriter(true).with {
            it.write("\nspring.profiles.active=${env}")
            it.flush()
            it.close()
        }
    }
    String jarList = ""
    configurations.runtimeClasspath.each {jarList = jarList + " lib/" + it.name}
    manifest {
        attributes("Main-Class": "com.example.demo.Demo1Application",
                "Class-Path": jarList)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
